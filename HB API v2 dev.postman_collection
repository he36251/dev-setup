{
	"variables": [],
	"info": {
		"name": "HB API v2 dev",
		"_postman_id": "e77a8dfc-c408-b621-b359-d6c168cd3ae7",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "v1 endpoints",
			"description": "",
			"item": [
				{
					"name": "User",
					"description": "",
					"item": [
						{
							"name": "User",
							"request": {
								"url": "https://api-new.hunchbuzz.com/api/v1/user/steve.graham@hunchbuzz.com",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "a423d1affdd8c82978469d71be3d6958",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Matilda",
											"description": "",
											"type": "text"
										},
										{
											"key": "email",
											"value": "matilda@wasagreatfilm.ilovedannydevito",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Store user",
							"request": {
								"url": "hbapi.dev/api/v1/user",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Matilda",
											"description": "",
											"type": "text"
										},
										{
											"key": "email",
											"value": "matilda@wasagreatfilm.ilovedannydevito",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update user",
							"request": {
								"url": "hbapi.dev/api/v1/user/3",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "c0a31bba31c641a334362a979f3c3a21",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"description": "",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Boris",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete user",
							"request": {
								"url": "hbapi.dev/api/v1/user/matilda@wasagreatfilm.ilovedannydevito",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Comment",
					"description": "",
					"item": [
						{
							"name": "Comments",
							"request": {
								"url": "hbapi.dev/api/v1/idea/10342/comments",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Comment delete",
							"request": {
								"url": "hbapi.dev/api/v1/comment/4992",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "7cec5b80ff64bcaf7869faef84f83448",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Store comment",
							"request": {
								"url": "hbapi.dev/api/v1/comment",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content",
											"value": "How about a cheeseburger?",
											"description": "",
											"type": "text"
										},
										{
											"key": "idea_id",
											"value": "10342",
											"description": "",
											"type": "text"
										},
										{
											"key": "creator_id",
											"value": "29271",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update comment",
							"request": {
								"url": "hbapi.dev/api/v1/comment/4223",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"description": "",
											"type": "text"
										},
										{
											"key": "content",
											"value": "let's eat some hamburgers",
											"description": "",
											"type": "text"
										},
										{
											"key": "creator_id",
											"value": "28638",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Vote",
					"description": "",
					"item": [
						{
							"name": "Votes",
							"request": {
								"url": "hbapi.dev/api/v1/idea/10277/votes",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Store/update vote",
							"request": {
								"url": "hbapi.dev/api/v1/vote",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idea_id",
											"value": "10277",
											"description": "",
											"type": "text"
										},
										{
											"key": "user_id",
											"value": "1",
											"description": "",
											"type": "text"
										},
										{
											"key": "vote",
											"value": "1",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update vote",
							"request": {
								"url": "hbapi.dev/api/v1/vote",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"description": "",
											"type": "text"
										},
										{
											"key": "if you want to update a vote, just go through the other endpoint",
											"value": "since we don't give you vote ids, submitting a new vote with a user/idea combo will update old votes that are already for that idea/user combo",
											"description": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "idea_id",
											"value": "10277",
											"description": "",
											"type": "text"
										},
										{
											"key": "user_id",
											"value": "1",
											"description": "",
											"type": "text"
										},
										{
											"key": "vote",
											"value": "1",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Idea",
					"description": "",
					"item": [
						{
							"name": "Ideas",
							"request": {
								"url": "hbapi.dev/api/v1/challenge/2668/ideas",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "983f6885ef70096a66adb8573ba64105",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ideas showone",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10225",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Store idea",
							"request": {
								"url": "hbapi.dev/api/v1/idea",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "challenge_id",
											"value": "2334",
											"description": "",
											"type": "text"
										},
										{
											"key": "title",
											"value": "Once I needed your love",
											"description": "",
											"type": "text"
										},
										{
											"key": "content",
											"value": "but that was just one thing left on my mind",
											"description": "",
											"type": "text"
										},
										{
											"key": "creator_id",
											"value": "28638",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update idea",
							"request": {
								"url": "hbapi.dev/api/v1/idea/13902",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"description": "",
											"type": "text"
										},
										{
											"key": "creator_id",
											"value": "28638",
											"description": "",
											"type": "text"
										},
										{
											"key": "content",
											"value": " ",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Challenge",
					"description": "",
					"item": [
						{
							"name": "Challenges get ideas",
							"request": {
								"url": "hbapi.dev/api/v1/challenge/2334/ideas",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Challenges",
							"request": {
								"url": "hbapi.dev/api/v1/platform/1292/challenges",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "983f6885ef70096a66adb8573ba64105",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "Store Challenge",
							"request": {
								"url": "hbapi.dev/api/v1/challenge/",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "New wave is the best",
											"description": "",
											"type": "text"
										},
										{
											"key": "platform_id",
											"value": "1",
											"description": "",
											"type": "text"
										},
										{
											"key": "description",
											"value": "love duran duran yo",
											"description": "",
											"type": "text"
										},
										{
											"key": "creator_id",
											"value": "3",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Challenge",
							"request": {
								"url": "hbapi.dev/api/v1/challenge/1",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"description": "",
											"type": "text"
										},
										{
											"key": "title",
											"value": "Shoot a poison arrow through my heart!",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Platform",
					"description": "",
					"item": [
						{
							"name": "Platform",
							"request": {
								"url": "https://api-new.hunchbuzz.com/api/v1/platform/hunchbuzzdemo",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "5d37cbd9dbf6d95af2919ff2a002710f",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Store platform",
							"request": {
								"url": "hbapi.dev/api/v1/platform/",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Boogie Nights",
											"description": "",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Let's boogie all night!",
											"description": "",
											"type": "text"
										},
										{
											"key": "owner_id",
											"value": "3",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update platform",
							"request": {
								"url": "hbapi.dev/api/v1/platform/1407",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "BoogieNights",
											"description": "",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Let's boogie all night!",
											"description": "",
											"type": "text"
										},
										{
											"key": "owner_id",
											"value": "3",
											"description": "",
											"type": "text"
										},
										{
											"key": "_method",
											"value": "PUT",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Review",
					"description": "",
					"item": [
						{
							"name": "Review v1",
							"request": {
								"url": "hbapi.dev/api/v1/idea/10342/reviews",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Store Review v1",
							"request": {
								"url": "hbapi.dev/api/v1/review",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idea_id",
											"value": "4941",
											"description": ""
										},
										{
											"key": "content",
											"value": "testing API review store",
											"description": ""
										},
										{
											"key": "creator_id",
											"value": "28638",
											"description": ""
										},
										{
											"key": "metric_1",
											"value": "5",
											"description": ""
										},
										{
											"key": "metric_2",
											"value": "5",
											"description": ""
										},
										{
											"key": "metric_3",
											"value": "5",
											"description": ""
										},
										{
											"key": "metric_4",
											"value": "5",
											"description": ""
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Review v1",
							"request": {
								"url": "hbapi.dev/api/v1/review/428",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"type": "text"
										},
										{
											"key": "idea_id",
											"value": "1232"
										},
										{
											"key": "content",
											"value": "testing API review update"
										},
										{
											"key": "creator_id",
											"value": "3"
										},
										{
											"key": "metric_1",
											"value": "3"
										},
										{
											"key": "metric_2",
											"value": "3"
										},
										{
											"key": "metric_3",
											"value": "3"
										},
										{
											"key": "metric_4",
											"value": "3"
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Delete Review v1",
							"request": {
								"url": "hbapi.dev/api/v1/review/428",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "v2 endpoints",
			"description": "",
			"item": [
				{
					"name": "User",
					"description": "",
					"item": [
						{
							"name": "User stats",
							"request": {
								"url": "hbapi.dev/api/v2/user/1/stats",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "User activity",
							"request": {
								"url": "hbapi.dev/api/v2/user/3/activity",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Account",
							"request": {
								"url": "hbapi.dev/api/v2/user/createaccount",
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "gawo.test@hunch.buzz",
											"description": "",
											"type": "text"
										},
										{
											"key": "username",
											"value": "Gawo Testing",
											"description": "",
											"type": "text"
										},
										{
											"key": "password",
											"value": "qwerty",
											"description": "",
											"type": "text"
										},
										{
											"key": "full_name",
											"value": "Gawo Test",
											"description": "",
											"type": "text"
										},
										{
											"key": "platform",
											"value": "hunchbuzzdemo",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Comment",
					"description": "",
					"item": [
						{
							"name": "Comments",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10342/comments",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Vote",
					"description": "",
					"item": [
						{
							"name": "Votes",
							"request": {
								"url": "https://api-new.hunchbuzz.com/api/v2/idea/13904/votes/lastVote",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "b094cd71eb7837363cb9897c968776ae",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Idea",
					"description": "",
					"item": [
						{
							"name": "Idea",
							"request": {
								"url": "https://api-new.hunchbuzz.com/api/v2/idea/14085",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "5d37cbd9dbf6d95af2919ff2a002710f",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ideas image",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10282/image",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"description": "image",
											"type": "file",
											"src": "boardgames2.jpeg"
										},
										{
											"key": "1",
											"value": "name",
											"description": "",
											"type": "text"
										},
										{
											"key": "params",
											"value": "another-name.jpg",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ideas Top",
							"request": {
								"url": "hbapi.dev/api/v2/challenge/2668/ideas/top",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "983f6885ef70096a66adb8573ba64105",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ideas Newest",
							"request": {
								"url": "hbapi.dev/api/v2/challenge/2668/ideas/newest",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "983f6885ef70096a66adb8573ba64105",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "idea Stats",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10225/stats",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "7cec5b80ff64bcaf7869faef84f83448",
										"description": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "",
											"description": "image",
											"type": "file"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Challenge",
					"description": "",
					"item": [
						{
							"name": "Challenge",
							"request": {
								"url": "hbapi.dev/api/v2/challenge/1727",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e577e169c54a8e42d26c7d3bf28af658",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "Challenge Top",
							"request": {
								"url": "hbapi.dev/api/v2/platform/961/challenges/top",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Challenge Newest",
							"request": {
								"url": "hbapi.dev/api/v2/platform/1367/challenges/newest",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e577e169c54a8e42d26c7d3bf28af658",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Platform",
					"description": "",
					"item": [
						{
							"name": "Platform",
							"request": {
								"url": "hbapi.dev/api/v1/platform/961",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Review",
					"description": "",
					"item": [
						{
							"name": "Review v2",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10277/reviews",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": [
								{
									"id": "0ba9ec6b-3557-4427-aba5-2af26c644122",
									"name": "Get v2",
									"originalRequest": {
										"url": "https://hbapi.dev/api/v2/idea/41/reviews",
										"method": "GET",
										"header": [
											{
												"key": "token",
												"value": "72c86801615d5634a5744404293a3593",
												"description": ""
											}
										],
										"body": {}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"_postman_previewtype": "text",
									"header": [
										{
											"name": "content-encoding",
											"key": "content-encoding",
											"value": "gzip",
											"description": "The type of encoding used on the data."
										},
										{
											"name": "content-type",
											"key": "content-type",
											"value": "text/html; charset=UTF-8",
											"description": "The mime type of this content"
										},
										{
											"name": "date",
											"key": "date",
											"value": "Tue, 12 Dec 2017 21:15:09 GMT",
											"description": "The date and time that the message was sent"
										},
										{
											"name": "server",
											"key": "server",
											"value": "nginx/1.12.2",
											"description": "A name for the server"
										},
										{
											"name": "status",
											"key": "status",
											"value": "200",
											"description": "Custom header"
										},
										{
											"name": "vary",
											"key": "vary",
											"value": "Accept-Encoding",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"name": "x-powered-by",
											"key": "x-powered-by",
											"value": "PHP/7.1.12",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [],
									"responseTime": 941,
									"body": "<script> Sfdump = window.Sfdump || (function (doc) { var refStyle = doc.createElement('style'), rxEsc = /([.*+?^${}()|\\[\\]\\/\\\\])/g, idRx = /\\bsf-dump-\\d+-ref[012]\\w+\\b/, keyHint = 0 <= navigator.platform.toUpperCase().indexOf('MAC') ? 'Cmd' : 'Ctrl', addEventListener = function (e, n, cb) { e.addEventListener(n, cb, false); }; (doc.documentElement.firstElementChild || doc.documentElement.children[0]).appendChild(refStyle); if (!doc.addEventListener) { addEventListener = function (element, eventName, callback) { element.attachEvent('on' + eventName, function (e) { e.preventDefault = function () {e.returnValue = false;}; e.target = e.srcElement; callback(e); }); }; } function toggle(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className, arrow, newClass; if (/\\bsf-dump-compact\\b/.test(oldClass)) { arrow = '&#9660;'; newClass = 'sf-dump-expanded'; } else if (/\\bsf-dump-expanded\\b/.test(oldClass)) { arrow = '&#9654;'; newClass = 'sf-dump-compact'; } else { return false; } a.lastChild.innerHTML = arrow; s.className = s.className.replace(/\\bsf-dump-(compact|expanded)\\b/, newClass); if (recursive) { try { a = s.querySelectorAll('.'+oldClass); for (s = 0; s < a.length; ++s) { if (-1 == a[s].className.indexOf(newClass)) { a[s].className = newClass; a[s].previousSibling.lastChild.innerHTML = arrow; } } } catch (e) { } } return true; }; function collapse(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className; if (/\\bsf-dump-expanded\\b/.test(oldClass)) { toggle(a, recursive); return true; } return false; }; function expand(a, recursive) { var s = a.nextSibling || {}, oldClass = s.className; if (/\\bsf-dump-compact\\b/.test(oldClass)) { toggle(a, recursive); return true; } return false; }; function collapseAll(root) { var a = root.querySelector('a.sf-dump-toggle'); if (a) { collapse(a, true); expand(a); return true; } return false; } function reveal(node) { var previous, parents = []; while ((node = node.parentNode || {}) && (previous = node.previousSibling) && 'A' === previous.tagName) { parents.push(previous); } if (0 !== parents.length) { parents.forEach(function (parent) { expand(parent); }); return true; } return false; } function highlight(root, activeNode, nodes) { resetHighlightedNodes(root); Array.from(nodes||[]).forEach(function (node) { if (!/\\bsf-dump-highlight\\b/.test(node.className)) { node.className = node.className + ' sf-dump-highlight'; } }); if (!/\\bsf-dump-highlight-active\\b/.test(activeNode.className)) { activeNode.className = activeNode.className + ' sf-dump-highlight-active'; } } function resetHighlightedNodes(root) { Array.from(root.querySelectorAll('.sf-dump-str, .sf-dump-key, .sf-dump-public, .sf-dump-protected, .sf-dump-private')).forEach(function (strNode) { strNode.className = strNode.className.replace(/\\bsf-dump-highlight\\b/, ''); strNode.className = strNode.className.replace(/\\bsf-dump-highlight-active\\b/, ''); }); } return function (root, x) { root = doc.getElementById(root); var indentRx = new RegExp('^('+(root.getAttribute('data-indent-pad') || ' ').replace(rxEsc, '\\\\$1')+')+', 'm'), options = {\"maxDepth\":1,\"maxStringLength\":160,\"fileLinkFormat\":false}, elt = root.getElementsByTagName('A'), len = elt.length, i = 0, s, h, t = []; while (i < len) t.push(elt[i++]); for (i in x) { options[i] = x[i]; } function a(e, f) { addEventListener(root, e, function (e) { if ('A' == e.target.tagName) { f(e.target, e); } else if ('A' == e.target.parentNode.tagName) { f(e.target.parentNode, e); } else if (e.target.nextElementSibling && 'A' == e.target.nextElementSibling.tagName) { f(e.target.nextElementSibling, e, true); } }); }; function isCtrlKey(e) { return e.ctrlKey || e.metaKey; } function xpathString(str) { var parts = str.match(/[^'\"]+|['\"]/g).map(function (part) { if (\"'\" == part) { return '\"\\'\"'; } if ('\"' == part) { return \"'\\\"'\"; } return \"'\" + part + \"'\"; }); return \"concat(\" + parts.join(\",\") + \", '')\"; } addEventListener(root, 'mouseover', function (e) { if ('' != refStyle.innerHTML) { refStyle.innerHTML = ''; } }); a('mouseover', function (a, e, c) { if (c) { e.target.style.cursor = \"pointer\"; } else if (a = idRx.exec(a.className)) { try { refStyle.innerHTML = 'pre.sf-dump .'+a[0]+'{background-color: #B729D9; color: #FFF !important; border-radius: 2px}'; } catch (e) { } } }); a('click', function (a, e, c) { if (/\\bsf-dump-toggle\\b/.test(a.className)) { e.preventDefault(); if (!toggle(a, isCtrlKey(e))) { var r = doc.getElementById(a.getAttribute('href').substr(1)), s = r.previousSibling, f = r.parentNode, t = a.parentNode; t.replaceChild(r, a); f.replaceChild(a, s); t.insertBefore(s, r); f = f.firstChild.nodeValue.match(indentRx); t = t.firstChild.nodeValue.match(indentRx); if (f && t && f[0] !== t[0]) { r.innerHTML = r.innerHTML.replace(new RegExp('^'+f[0].replace(rxEsc, '\\\\$1'), 'mg'), t[0]); } if (/\\bsf-dump-compact\\b/.test(r.className)) { toggle(s, isCtrlKey(e)); } } if (c) { } else if (doc.getSelection) { try { doc.getSelection().removeAllRanges(); } catch (e) { doc.getSelection().empty(); } } else { doc.selection.empty(); } } else if (/\\bsf-dump-str-toggle\\b/.test(a.className)) { e.preventDefault(); e = a.parentNode.parentNode; e.className = e.className.replace(/\\bsf-dump-str-(expand|collapse)\\b/, a.parentNode.className); } }); elt = root.getElementsByTagName('SAMP'); len = elt.length; i = 0; while (i < len) t.push(elt[i++]); len = t.length; for (i = 0; i < len; ++i) { elt = t[i]; if ('SAMP' == elt.tagName) { elt.className = 'sf-dump-expanded'; a = elt.previousSibling || {}; if ('A' != a.tagName) { a = doc.createElement('A'); a.className = 'sf-dump-ref'; elt.parentNode.insertBefore(a, elt); } else { a.innerHTML += ' '; } a.title = (a.title ? a.title+'\\n[' : '[')+keyHint+'+click] Expand all children'; a.innerHTML += '<span>&#9660;</span>'; a.className += ' sf-dump-toggle'; x = 1; if ('sf-dump' != elt.parentNode.className) { x += elt.parentNode.getAttribute('data-depth')/1; } elt.setAttribute('data-depth', x); if (x > options.maxDepth) { toggle(a); } } else if (/\\bsf-dump-ref\\b/.test(elt.className) && (a = elt.getAttribute('href'))) { a = a.substr(1); elt.className += ' '+a; if (/[\\[{]$/.test(elt.previousSibling.nodeValue)) { a = a != elt.nextSibling.id && doc.getElementById(a); try { s = a.nextSibling; elt.appendChild(a); s.parentNode.insertBefore(a, s); if (/^[@#]/.test(elt.innerHTML)) { elt.innerHTML += ' <span>&#9654;</span>'; } else { elt.innerHTML = '<span>&#9654;</span>'; elt.className = 'sf-dump-ref'; } elt.className += ' sf-dump-toggle'; } catch (e) { if ('&' == elt.innerHTML.charAt(0)) { elt.innerHTML = '&hellip;'; elt.className = 'sf-dump-ref'; } } } } } if (doc.evaluate && Array.from && root.children.length > 1) { root.setAttribute('tabindex', 0); SearchState = function () { this.nodes = []; this.idx = 0; }; SearchState.prototype = { next: function () { if (this.isEmpty()) { return this.current(); } this.idx = this.idx < (this.nodes.length - 1) ? this.idx + 1 : this.idx; return this.current(); }, previous: function () { if (this.isEmpty()) { return this.current(); } this.idx = this.idx > 0 ? this.idx - 1 : this.idx; return this.current(); }, isEmpty: function () { return 0 === this.count(); }, current: function () { if (this.isEmpty()) { return null; } return this.nodes[this.idx]; }, reset: function () { this.nodes = []; this.idx = 0; }, count: function () { return this.nodes.length; }, }; function showCurrent(state) { var currentNode = state.current(); if (currentNode) { reveal(currentNode); highlight(root, currentNode, state.nodes); } counter.textContent = (state.isEmpty() ? 0 : state.idx + 1) + ' of ' + state.count(); } var search = doc.createElement('div'); search.className = 'sf-dump-search-wrapper sf-dump-search-hidden'; search.innerHTML = ' <input type=\"text\" class=\"sf-dump-search-input\"> <span class=\"sf-dump-search-count\">0 of 0<\\/span> <button type=\"button\" class=\"sf-dump-search-input-previous\" tabindex=\"-1\"> <svg viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M1683 1331l-166 165q-19 19-45 19t-45-19l-531-531-531 531q-19 19-45 19t-45-19l-166-165q-19-19-19-45.5t19-45.5l742-741q19-19 45-19t45 19l742 741q19 19 19 45.5t-19 45.5z\"\\/> <\\/svg> <\\/button> <button type=\"button\" class=\"sf-dump-search-input-next\" tabindex=\"-1\"> <svg viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M1683 808l-742 741q-19 19-45 19t-45-19l-742-741q-19-19-19-45.5t19-45.5l166-165q19-19 45-19t45 19l531 531 531-531q19-19 45-19t45 19l166 165q19 19 19 45.5t-19 45.5z\"\\/> <\\/svg> <\\/button> '; root.insertBefore(search, root.firstChild); var state = new SearchState(); var searchInput = search.querySelector('.sf-dump-search-input'); var counter = search.querySelector('.sf-dump-search-count'); var searchInputTimer = 0; var previousSearchQuery = ''; addEventListener(searchInput, 'keyup', function (e) { var searchQuery = e.target.value; /* Don't perform anything if the pressed key didn't change the query */ if (searchQuery === previousSearchQuery) { return; } previousSearchQuery = searchQuery; clearTimeout(searchInputTimer); searchInputTimer = setTimeout(function () { state.reset(); collapseAll(root); resetHighlightedNodes(root); if ('' === searchQuery) { counter.textContent = '0 of 0'; return; } var xpathResult = doc.evaluate('//pre[@id=\"' + root.id + '\"]//span[@class=\"sf-dump-str\" or @class=\"sf-dump-key\" or @class=\"sf-dump-public\" or @class=\"sf-dump-protected\" or @class=\"sf-dump-private\"][contains(child::text(), ' + xpathString(searchQuery) + ')]', document, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null); while (node = xpathResult.iterateNext()) state.nodes.push(node); showCurrent(state); }, 400); }); Array.from(search.querySelectorAll('.sf-dump-search-input-next, .sf-dump-search-input-previous')).forEach(function (btn) { addEventListener(btn, 'click', function (e) { e.preventDefault(); -1 !== e.target.className.indexOf('next') ? state.next() : state.previous(); searchInput.focus(); collapseAll(root); showCurrent(state); }) }); addEventListener(root, 'keydown', function (e) { var isSearchActive = !/\\bsf-dump-search-hidden\\b/.test(search.className); if ((114 === e.keyCode && !isSearchActive) || (isCtrlKey(e) && 70 === e.keyCode)) { /* F3 or CMD/CTRL + F */ e.preventDefault(); search.className = search.className.replace(/\\bsf-dump-search-hidden\\b/, ''); searchInput.focus(); } else if (isSearchActive) { if (27 === e.keyCode) { /* ESC key */ search.className += ' sf-dump-search-hidden'; e.preventDefault(); resetHighlightedNodes(root); searchInput.value = ''; } else if ( (isCtrlKey(e) && 71 === e.keyCode) /* CMD/CTRL + G */ || 13 === e.keyCode /* Enter */ || 114 === e.keyCode /* F3 */ ) { e.preventDefault(); e.shiftKey ? state.previous() : state.next(); collapseAll(root); showCurrent(state); } } }); } if (0 >= options.maxStringLength) { return; } try { elt = root.querySelectorAll('.sf-dump-str'); len = elt.length; i = 0; t = []; while (i < len) t.push(elt[i++]); len = t.length; for (i = 0; i < len; ++i) { elt = t[i]; s = elt.innerText || elt.textContent; x = s.length - options.maxStringLength; if (0 < x) { h = elt.innerHTML; elt[elt.innerText ? 'innerText' : 'textContent'] = s.substring(0, options.maxStringLength); elt.className += ' sf-dump-str-collapse'; elt.innerHTML = '<span class=sf-dump-str-collapse>'+h+'<a class=\"sf-dump-ref sf-dump-str-toggle\" title=\"Collapse\"> &#9664;</a></span>'+ '<span class=sf-dump-str-expand>'+elt.innerHTML+'<a class=\"sf-dump-ref sf-dump-str-toggle\" title=\"'+x+' remaining characters\"> &#9654;</a></span>'; } } } catch (e) { } }; })(document); </script><style> pre.sf-dump { display: block; white-space: pre; padding: 5px; } pre.sf-dump:after { content: \"\"; visibility: hidden; display: block; height: 0; clear: both; } pre.sf-dump span { display: inline; } pre.sf-dump .sf-dump-compact { display: none; } pre.sf-dump abbr { text-decoration: none; border: none; cursor: help; } pre.sf-dump a { text-decoration: none; cursor: pointer; border: 0; outline: none; color: inherit; } pre.sf-dump .sf-dump-ellipsis { display: inline-block; overflow: visible; text-overflow: ellipsis; max-width: 5em; white-space: nowrap; overflow: hidden; vertical-align: top; } pre.sf-dump .sf-dump-ellipsis+.sf-dump-ellipsis { max-width: none; } pre.sf-dump code { display:inline; padding:0; background:none; } .sf-dump-str-collapse .sf-dump-str-collapse { display: none; } .sf-dump-str-expand .sf-dump-str-expand { display: none; } .sf-dump-public.sf-dump-highlight, .sf-dump-protected.sf-dump-highlight, .sf-dump-private.sf-dump-highlight, .sf-dump-str.sf-dump-highlight, .sf-dump-key.sf-dump-highlight { background: rgba(111, 172, 204, 0.3); border: 1px solid #7DA0B1; border-radius: 3px; } .sf-dump-public.sf-dump-highlight-active, .sf-dump-protected.sf-dump-highlight-active, .sf-dump-private.sf-dump-highlight-active, .sf-dump-str.sf-dump-highlight-active, .sf-dump-key.sf-dump-highlight-active { background: rgba(253, 175, 0, 0.4); border: 1px solid #ffa500; border-radius: 3px; } pre.sf-dump .sf-dump-search-hidden { display: none; } pre.sf-dump .sf-dump-search-wrapper { float: right; font-size: 0; white-space: nowrap; max-width: 100%; text-align: right; } pre.sf-dump .sf-dump-search-wrapper > * { vertical-align: top; box-sizing: border-box; height: 21px; font-weight: normal; border-radius: 0; background: #FFF; color: #757575; border: 1px solid #BBB; } pre.sf-dump .sf-dump-search-wrapper > input.sf-dump-search-input { padding: 3px; height: 21px; font-size: 12px; border-right: none; width: 140px; border-top-left-radius: 3px; border-bottom-left-radius: 3px; color: #000; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next, pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-previous { background: #F2F2F2; outline: none; border-left: none; font-size: 0; line-height: 0; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next { border-top-right-radius: 3px; border-bottom-right-radius: 3px; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-next > svg, pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-input-previous > svg { pointer-events: none; width: 12px; height: 12px; } pre.sf-dump .sf-dump-search-wrapper > .sf-dump-search-count { display: inline-block; padding: 0 5px; margin: 0; border-left: none; line-height: 21px; font-size: 12px; }pre.sf-dump, pre.sf-dump .sf-dump-default{background-color:#fff; color:#222; line-height:1.2em; font-weight:normal; font:12px Monaco, Consolas, monospace; word-wrap: break-word; white-space: pre-wrap; position:relative; z-index:100000}pre.sf-dump .sf-dump-num{color:#a71d5d}pre.sf-dump .sf-dump-const{color:#795da3}pre.sf-dump .sf-dump-str{color:#df5000}pre.sf-dump .sf-dump-cchr{color:#222}pre.sf-dump .sf-dump-note{color:#a71d5d}pre.sf-dump .sf-dump-ref{color:#a0a0a0}pre.sf-dump .sf-dump-public{color:#795da3}pre.sf-dump .sf-dump-protected{color:#795da3}pre.sf-dump .sf-dump-private{color:#795da3}pre.sf-dump .sf-dump-meta{color:#b729d9}pre.sf-dump .sf-dump-key{color:#df5000}pre.sf-dump .sf-dump-index{color:#a71d5d}</style><pre class=sf-dump id=sf-dump-1436726038 data-indent-pad=\"  \"><abbr title=\"Illuminate\\Database\\Eloquent\\Collection\" class=sf-dump-note>Collection</abbr> {<a class=sf-dump-ref>#229</a><samp>\n  #<span class=sf-dump-protected title=\"Protected property\">items</span>: <span class=sf-dump-note>array:1</span> [<samp>\n    <span class=sf-dump-index>0</span> => <abbr title=\"HunchBuzz\\Review\" class=sf-dump-note>Review</abbr> {<a class=sf-dump-ref>#542</a><samp>\n      #<span class=sf-dump-protected title=\"Protected property\">table</span>: \"<span class=sf-dump-str title=\"18 characters\">Platform_subreview</span>\"\n      #<span class=sf-dump-protected title=\"Protected property\">visible</span>: <span class=sf-dump-note>array:10</span> [<samp>\n        <span class=sf-dump-index>0</span> => \"<span class=sf-dump-str title=\"2 characters\">id</span>\"\n        <span class=sf-dump-index>1</span> => \"<span class=sf-dump-str title=\"21 characters\">id_Platform_responses</span>\"\n        <span class=sf-dump-index>2</span> => \"<span class=sf-dump-str title=\"11 characters\">id_Platform</span>\"\n        <span class=sf-dump-index>3</span> => \"<span class=sf-dump-str title=\"7 characters\">Creator</span>\"\n        <span class=sf-dump-index>4</span> => \"<span class=sf-dump-str title=\"7 characters\">Content</span>\"\n        <span class=sf-dump-index>5</span> => \"<span class=sf-dump-str title=\"8 characters\">Creation</span>\"\n        <span class=sf-dump-index>6</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_1</span>\"\n        <span class=sf-dump-index>7</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_2</span>\"\n        <span class=sf-dump-index>8</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_3</span>\"\n        <span class=sf-dump-index>9</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_4</span>\"\n      </samp>]\n      #<span class=sf-dump-protected title=\"Protected property\">fillable</span>: <span class=sf-dump-note>array:9</span> [<samp>\n        <span class=sf-dump-index>0</span> => \"<span class=sf-dump-str title=\"21 characters\">id_Platform_responses</span>\"\n        <span class=sf-dump-index>1</span> => \"<span class=sf-dump-str title=\"11 characters\">id_Platform</span>\"\n        <span class=sf-dump-index>2</span> => \"<span class=sf-dump-str title=\"7 characters\">Creator</span>\"\n        <span class=sf-dump-index>3</span> => \"<span class=sf-dump-str title=\"7 characters\">Content</span>\"\n        <span class=sf-dump-index>4</span> => \"<span class=sf-dump-str title=\"8 characters\">Creation</span>\"\n        <span class=sf-dump-index>5</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_1</span>\"\n        <span class=sf-dump-index>6</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_2</span>\"\n        <span class=sf-dump-index>7</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_3</span>\"\n        <span class=sf-dump-index>8</span> => \"<span class=sf-dump-str title=\"8 characters\">Metric_4</span>\"\n      </samp>]\n      #<span class=sf-dump-protected title=\"Protected property\">connection</span>: \"<span class=sf-dump-str title=\"5 characters\">mysql</span>\"\n      #<span class=sf-dump-protected title=\"Protected property\">primaryKey</span>: \"<span class=sf-dump-str title=\"2 characters\">id</span>\"\n      #<span class=sf-dump-protected title=\"Protected property\">keyType</span>: \"<span class=sf-dump-str title=\"3 characters\">int</span>\"\n      +<span class=sf-dump-public title=\"Public property\">incrementing</span>: <span class=sf-dump-const>true</span>\n      #<span class=sf-dump-protected title=\"Protected property\">with</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">withCount</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">perPage</span>: <span class=sf-dump-num>15</span>\n      +<span class=sf-dump-public title=\"Public property\">exists</span>: <span class=sf-dump-const>true</span>\n      +<span class=sf-dump-public title=\"Public property\">wasRecentlyCreated</span>: <span class=sf-dump-const>false</span>\n      #<span class=sf-dump-protected title=\"Protected property\">attributes</span>: <span class=sf-dump-note>array:10</span> [<samp>\n        \"<span class=sf-dump-key>id</span>\" => <span class=sf-dump-num>1</span>\n        \"<span class=sf-dump-key>id_Platform_responses</span>\" => <span class=sf-dump-num>41</span>\n        \"<span class=sf-dump-key>id_Platform</span>\" => <span class=sf-dump-num>41</span>\n        \"<span class=sf-dump-key>Creator</span>\" => <span class=sf-dump-num>113</span>\n        \"<span class=sf-dump-key>Content</span>\" => \"<span class=sf-dump-str title=\"65 characters\">Ideia simples, mas com pouca possibilidade de impactar a empresa.</span>\"\n        \"<span class=sf-dump-key>Creation</span>\" => \"<span class=sf-dump-str title=\"19 characters\">2013-08-16 15:39:31</span>\"\n        \"<span class=sf-dump-key>Metric_1</span>\" => <span class=sf-dump-num>5</span>\n        \"<span class=sf-dump-key>Metric_2</span>\" => <span class=sf-dump-num>2</span>\n        \"<span class=sf-dump-key>Metric_3</span>\" => <span class=sf-dump-num>5</span>\n        \"<span class=sf-dump-key>Metric_4</span>\" => <span class=sf-dump-num>1</span>\n      </samp>]\n      #<span class=sf-dump-protected title=\"Protected property\">original</span>: <span class=sf-dump-note>array:10</span> [<samp>\n        \"<span class=sf-dump-key>id</span>\" => <span class=sf-dump-num>1</span>\n        \"<span class=sf-dump-key>id_Platform_responses</span>\" => <span class=sf-dump-num>41</span>\n        \"<span class=sf-dump-key>id_Platform</span>\" => <span class=sf-dump-num>41</span>\n        \"<span class=sf-dump-key>Creator</span>\" => <span class=sf-dump-num>113</span>\n        \"<span class=sf-dump-key>Content</span>\" => \"<span class=sf-dump-str title=\"65 characters\">Ideia simples, mas com pouca possibilidade de impactar a empresa.</span>\"\n        \"<span class=sf-dump-key>Creation</span>\" => \"<span class=sf-dump-str title=\"19 characters\">2013-08-16 15:39:31</span>\"\n        \"<span class=sf-dump-key>Metric_1</span>\" => <span class=sf-dump-num>5</span>\n        \"<span class=sf-dump-key>Metric_2</span>\" => <span class=sf-dump-num>2</span>\n        \"<span class=sf-dump-key>Metric_3</span>\" => <span class=sf-dump-num>5</span>\n        \"<span class=sf-dump-key>Metric_4</span>\" => <span class=sf-dump-num>1</span>\n      </samp>]\n      #<span class=sf-dump-protected title=\"Protected property\">changes</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">casts</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">dates</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">dateFormat</span>: <span class=sf-dump-const>null</span>\n      #<span class=sf-dump-protected title=\"Protected property\">appends</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">dispatchesEvents</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">observables</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">relations</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">touches</span>: []\n      +<span class=sf-dump-public title=\"Public property\">timestamps</span>: <span class=sf-dump-const>true</span>\n      #<span class=sf-dump-protected title=\"Protected property\">hidden</span>: []\n      #<span class=sf-dump-protected title=\"Protected property\">guarded</span>: <span class=sf-dump-note>array:1</span> [<samp>\n        <span class=sf-dump-index>0</span> => \"<span class=sf-dump-str>*</span>\"\n      </samp>]\n    </samp>}\n  </samp>]\n</samp>}\n</pre><script>Sfdump(\"sf-dump-1436726038\")</script>\n"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "IdeaCycle",
					"description": "",
					"item": [
						{
							"name": "Get platform ideacycles",
							"request": {
								"url": "hbapi.dev/api/v2/platform/961/ideacycles",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e577e169c54a8e42d26c7d3bf28af658",
										"description": ""
									}
								],
								"body": {},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get ideacycle ideas",
							"request": {
								"url": "hbapi.dev/api/v2/ideacycle/1/ideas",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "e7c9f1e202b834689ef66ab095347701",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Subscription",
					"description": "",
					"item": [
						{
							"name": "Idea Subscription",
							"request": {
								"url": "https://api-new.hunchbuzz.com/api/v2/idea/14118/subscription",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "012c324220e5d94259b8c96862b1e638",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Idea Subscribe",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10342/subscribe",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Idea Unsubscribe",
							"request": {
								"url": "hbapi.dev/api/v2/idea/10342/unsubscribe",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "becf5f0cb428caf3eec993b531fb4ggc",
										"description": ""
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Signin",
			"description": "",
			"item": [
				{
					"name": "Get Platform names",
					"request": {
						"url": "https://api-new.hunchbuzz.com/api/v2/user/gawo.he@hunchbuzz.com/platforms",
						"method": "GET",
						"header": [],
						"body": {},
						"description": null
					},
					"response": []
				},
				{
					"name": "Saml check",
					"request": {
						"url": "https://api-new.hunchbuzz.com/api/v2/platform/aberdeencc/samlcheck",
						"method": "GET",
						"header": [],
						"body": {},
						"description": null
					},
					"response": []
				},
				{
					"name": "Key swap",
					"request": {
						"url": "https://api-new.hunchbuzz.com/api/v2/platform/samlswap/abc",
						"method": "GET",
						"header": [],
						"body": {},
						"description": null
					},
					"response": []
				},
				{
					"name": "Mobile Access",
					"request": {
						"url": "https://api-new.hunchbuzz.com/api/v2/platform/hunchbuzzdemo/mobilecheck",
						"method": "GET",
						"header": [],
						"body": {},
						"description": null
					},
					"response": []
				}
			]
		}
	]
}